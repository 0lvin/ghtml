2000-01-18  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (html_engine_make_cursor_visible): Argh.
	s/rightBorder/topBorder/.
	(draw_cursor): Fixed.

	* gtkhtml.c (key_press_event): Queue a draw if return value is
	`TRUE'.

2000-01-18  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c (parse_input): Modified the forms code to work with the
	new htmlengine. Changed html_clue_append to append_element. And did some
	code cleanup.

2000-01-18  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (append_element): Silly me.  Don't add the object
	to the flow twice when creating a new flow!

	* htmlcursor.c (forward): Fixed navigation at the end of the
	element so that it works with empty elements.
	(backward): Likewise.
	(next_not_slave): Fixed so that it starts from the object after
	`object', not `object' itself.

	* htmlengine.c (current_clueflow_style): If the stack is empty,
	return `HTML_CLUEFLOW_STYLE_NORMAL', not `HTML_CLUEFLOW_STYLE_P'.

	* htmlclueflow.c (get_default_font_style): Removed handling of
	`HTML_CLUEFLOW_STYLE_P'.

	* debug.c (clueflow_style_to_string): Removed handling of
	`HTML_CLUEFLOW_STYLE_P'.

	* htmlclueflow.h: Get rid of `HTML_CLUEFLOW_STYLE_P' as we don't
	need it.

	* htmlengine.c (html_engine_init): The default value for
	`editable' should be FALSE!

	* htmlengine.c (html_engine_flush_draw_queue): Draw cursor
	before/after flushing the queue.

	* htmlengine-edit.c (html_engine_insert_para): Draw cursor
	before/after doing the stuff.
	(html_engine_insert): Likewise.

	* htmlcursor.c (html_cursor_up): Rewritten by means of
	`html_object_get_cursor'.

	* htmltextmaster.c (calc_char_position): Removed.
	(get_cursor): New function, implementation of
	`HTMLObject::get_cursor'.
	(html_text_master_class_init): Install it.
	(get_cursor): When we encounter a non-HTMLTextSlave object, we
	should break the loop, not continue it.

	* htmltext.c (html_text_calc_char_position): Removed.
	(calc_char_position): Removed.
	(get_cursor): New function, implementation of
	`HTMLObject::get_cursor'.
	(html_text_class_init): Install it.

	* htmltext.h: Removed `calc_char_position' method.

	* htmlobject.c (html_object_get_cursor): New function.
	(accepts_cursor): Return TRUE by default.
	(get_cursor): New function, implementation of
	`HTMLObject::get_cursor'.
	(class_init): Install it.

	* htmlobject.h: New virtual method `get_cursor'.

	* htmlengine-edit.c (queue_draw_for_cursor): Removed.
	(html_engine_move_cursor): Use `html_draw_cursor' instead.

	* htmlengine.c (html_engine_init): Initialize `invert_gc' to
	`NULL'.
	(html_engine_destroy): Destroy `invert_gc' if not `NULL'.
	(html_engine_realize): Initialize `invert_gc' by creating a
	`GDK_INVERT' GC.
	(html_engine_draw_cursor): New function.

	* htmlengine.h: New member `invert_gc' in `HTMLEngine'.

2000-01-17  Ettore Perazzoli  <ettore@helixcode.com>

	* gtkhtml.c: Do not #include "htmlpainter.h" anymore.
	(realize): Call `html_engine_realize' instead of accessing the
	painter and calling `html_painter_realize' directly.

	* htmlengine.c (html_engine_init): Initialize member `window' to
	NULL.
	(html_engine_realize): New function.

	* htmlengine.h: New member `window' in `HTMLEngine'.

	* htmlengine.h (html_painter_set_background_color): Removed bogus
	proto.

	* htmlclueflow.c (draw): Use `html_painter_get_black' to set the
	pen color for the bullet.  I think we should be using the font
	color instead, but it's fine for now.

	* htmlpainter.c (html_painter_get_black): New function.

	* htmlclue.c (draw): Removed bogus code to draw rects around the
	clue and getting rid of corresponding variables.  This was not
	even that useful for debugging, as it was intrinsecally broken.

	* htmlclueflow.c (add_pre_padding): Add some padding for `<pre>'
	as well, if the previous element is not a `<pre>' one.
	(add_post_padding): Likewise, but checking with the next element
	instead of the previous one.

	* htmlengine.c (parse_body): Handle `\n' by inserting a line
	break.

	* htmltype.c: Do not call `html_bullet_type_init()' anymore.

	* htmlbullet.c: Removed.
	* htmlbullet.h: Removed.

	* htmlengine.c (html_engine_init): Initialize `avoid_para' to
	`TRUE', `pending_para' to FALSE.
	(html_engine_parse): Likewise.
	(all functions): Updated to use these new members.
	(block_end_list): Avoid adding empty paragraph breaks after this.
	(block_end_indent): Likewise.
	(parse_f): Fix relative font size.

	* htmlengine.h: New elements `avoid_para', `pending_para'.

	* htmlengine.c (close_flow): Added ugly hack to check if the flow
	ends with a vspace.  If it does, the vspace is killed.  Yes, I
	should do it differently, but let's just get it to work now.

2000-01-16  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlcluev.c (get_right_clear): New function, implementation of
	`HTMLClue::get_right_clear'.
	(get_left_clear): New function, implementation of
	`HTMLClue::get_left_clear'.
	(html_cluev_class_init): Install virtual methods.

	* htmlclueflow.c (add_post_padding): Add padding even if the next
	object is an header.

	* htmlfontmanager.c: Use a static array for calculating the real
	font size.  (Yes, this is just a temporary hack.)

	* htmlclueflow.c (calc_preferred_width): Use `get_indent()'
	correctly instead of simply multiplying the level by the indent
	size.

	* htmlrule.c (draw): Fix braino: `HTML_HALIGN_RIGHT' and
	`HTML_HALIGN_LEFT' were swapped.

2000-01-13  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlclueflow.c: Changed to display bullets correctly even if
	`level' is zero.  (Which should not happen according to the
	standard, but it does happen in practice.)

	* htmlengine.c (html_engine_init): Initialize `pending_vspace' to
	zero.
	(html_engine_insert_text): Removed.
	(insert_pending_vspace): New function.
	(insert_text): New function.
	(add_line_break): New function.
	(block_end_font): No longer insert a vspace.
	(block_end_list): Likewise.
	(parse_body): Do not set `vspace_inserted' anymore.  `\n' just
	causes `pending_vspace' to be inconditionally incremented.
	(All functions): Use `add_line_break' to force line breaks instead
	of `html_engine_insert_vspace()'.
	(parse_h): Set `pending_vspace' to 0 when opening/closing headers.
	Insert pending vspace before adding a rule.
	(parse_i): Insert pending vspace before adding the image.
	(parse_l): Insert pending vspace before creating the new clue.
	(html_engine_insert_vspace): Removed.
	(close_flow): New parameter `clue'.

	* htmlengine.h: `vspace_inserted' removed.  New member
	`pending_vspace'.

	* htmlvspace.c (html_vspace_new): Removed parameter `space'.
	(html_vspace_init): Removed parameter `space'.  Do not init
	`ascent', `descent' anymore.
	(calc_size): New function, implementation for
	`HTMLObject::calc_size'.
	(html_vspace_class_init): Install it.

2000-01-11  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlclueflow.c (calc_size): Add padding at the end only.

	* htmlstack.c (html_stack_pop): Added precondition.

	* htmlengine.c (parse_a): Do not force color and font for links
	anymore.

	* htmllinktextmaster.c (get_font_style): New function,
	implementing `HTMLText::get_font_style'.  It forces the font style
	to be underlined.
	(html_link_text_master_class_init): Install it.

	* htmllinktext.c (get_font_style): New function, implementing
	`HTMLText::get_font_style'.  It forces the font style to be
	underlined.
	(html_link_text_class_init): Install it.

	* htmltablecell.c (html_table_cell_init): Initialize
	`bg_allocated' to `FALSE'.
	(set_bg_color): Set `bg_allocated' to `FALSE' if the new color is
	different from the existing one.
	(draw): If `bg_allocated' is `FALSE', allocate the color and set
	`bg_allocated' to `TRUE'.

	* htmltablecell.h: New member `bg_allocated' in `HTMLTableCell'.

	* htmlengine.c (html_engine_init): Set `bgColor_allocated' to
	`FALSE'.
	(draw_background): If `bgColor_allocated' is `FALSE', allocate
	`bgColor' in the engine's painter.
	(parse_b): Set `bgColor_allocated' to FALSE when setting a new
	`bgColor'.
	(close_anchor): Do not pop color on links anymore.

	* htmlengine.h: New member `bgColor_allocated' in `HTMLEngine'.

2000-01-10  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (current_color): New function.
	(html_engine_set_named_color): Removed.
	(push_color): New function.
	(pop_color): New function.
	(html_engine_stop_parser): Clear all the stacks except the
	list/glossary ones as I am still unsure how to handle them.
	(html_engine_pop_color): Removed.
	(All functions): Updated to use these new color stack functions.
	Also, use `gdk_color_parse()' instead of
	`html_engine_set_named_color'.

	* htmlengine.h (html_painter_set_background_color): Removed
	prototype (what the hell is this doing here!?).

	* htmllinktext.c (html_link_text_init): New parameter `color'.
	(html_link_text_new): New parameter `color'.

	* htmltextslave.c (draw): Set the color using
	`html_text_get_color()'.

	* htmltext.c (html_text_init): New parameter `color', to
	initialize the `color' member.  Alos, set `color_allocated' to
	FALSE.
	(html_text_new): New parameter `color'.
	(get_color): New function, default implementation for
	`HTMLText::get_color'.
	(html_text_get_color): New function.
	(draw): Use it.

	* htmltext.h: New members `color', `color_allocated'.  New virtual
	method `HTMLText::get_color'.

	* htmltable.c (draw): Removed stupid "nonono" message.  :-)

	* htmlengine.c (parse_t): Don't put the a new table in itw own
	HTMLClueFlow anymore: close the current flow, and append to the
	specified clue.

	* htmltextslave.c (calc_size): New function, implementation for
	`HTMLObject::calc_size'.
	(html_text_slave_class_init): Install it.

	* htmlclueflow.c (html_clueflow_get_default_font_style): New
	function.
	(get_default_font_style): Default implementation for
	`HTMLClueFlow::get_default_font_style'; just a stub for now.
	(html_clueflow_class_init): Install it.

	* htmlclueflow.h: New virtual method
	`HTMLClueFlow::get_default_font' to get the font associated with
	the HTMLClueFlow's style.

	* htmlclueflow.h (HTML_CLUEFLOW_CLASS): Fixed (do the correct
	cast).

	* htmltextmaster.c (calc_min_width): Implemented.
	(calc_preferred_width): Implemented.
	(calc_size): New function, implementing `HTMLObject::calc_size'.
	(html_text_master_class_init): Install it.

	* htmltext.c (calc_size): New function, implementation of
	`HTMLObject::calc_size()'.
	(html_text_class_init): Install it.

	* htmltext.c (html_text_get_font_style): New function.
	(get_font_style): Default implementation for
	`HTMLText::get_font_style'.
	(html_text_class_init): Install it.
	(draw): Use it.
	(calc_size): Use it.

	* htmltext.h: New virtual method `HTMLText::get_font_style'.

2000-01-09  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlobject.h: New arg `painter' in `HTMLObject::calc_size';
	removed arg `parent'.  New arg `painter' in
	`HTMLObject::calc_preferred_width', `HTMLObject::calc_min_width'
	and `HTMLObject::fit_line' as well.
	* htmlclue.c: Updated accordingly.
	* htmlclue.h: Updated accordingly.
	* htmlcluealigned.c: Updated accordingly.
	* htmlcluealigned.h: Updated accordingly.
	* htmlclueflow.c: Updated accordingly.
	* htmlclueflow.h: Updated accordingly.
	* htmlclueh.c: Updated accordingly.
	* htmlclueh.h: Updated accordingly.
	* htmlcluev.c: Updated accordingly.
	* htmlcluev.h: Updated accordingly.
	* htmlengine.c: Updated accordingly.
	* htmlimage.c: Updated accordingly.
	* htmlimage.h: Updated accordingly.
	* htmllinktext.c: Updated accordingly.
	* htmllinktext.h: Updated accordingly.
	* htmllinktextmaster.c: Updated accordingly.
	* htmllinktextmaster.h: Updated accordingly.
	* htmlobject.c: Updated accordingly.
	* htmlobject.h: Updated accordingly.
	* htmlrule.c: Updated accordingly.
	* htmlrule.h: Updated accordingly.
	* htmlstream.c: Updated accordingly.
	* htmltable.c: Updated accordingly.
	* htmltablecell.c: Updated accordingly.
	* htmltext.c: Updated accordingly.
	* htmltextmaster.c: Updated accordingly.
	* htmltextslave.c: Updated accordingly.
	* htmlvspace.c: Updated accordingly.
	* htmlvspace.h: Updated accordingly.

	* htmlpainter.c (html_painter_calc_ascent): New function.
	(html_painter_calc_descent): New function.
	(html_painter_calc_text_width): New function.

	* htmltable.c (find_anchor): Kill unused variable.

	* htmltype.c (html_types_init): Don't call `html_hspace_init()'
	anymore.

	* htmlhspace.c: Removed.
	* htmlhspace.h: Removed.

	* htmlengine.c: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.  Also, we do not hardcode the font and color all the
	time anymore: instead, we let the HTMLClueFlow specify the default
	font.
	(select_font_full): Removed.
	(select_font_relative): Removed.
	(current_font_style): New utility function.
	(push_font_style): New utility function.
	(pop_font_style): New utility function.
	(current_clueflow_style): New utility function.
	(push_clueflow_style): New utility function.
	(pop_clueflow_style): New utility function.
	(close_anchor): No longer pop the font.
	(html_engine_parse): Initialize the font stack with
	`HTML_FONT_STYLE_DEFAULT'.
	(html_engine_select_font): Removed.
	(html_engine_get_current_font): Removed.
	(html_engine_insert_text): Parameter `font' removed.  Always use
	the current font style.
	(new_flow): Removed parameter `style'.  Get the style from the top
	of the ClueFlow style stack using `current_clueflow_style'.
	(block_end_clueflow_style): New function.

	* htmlengine-edit.c (html_engine_insert_para): Use an empty
	HTMLTextMaster element instead of an hspace for the new clue.

	* htmlengine.h: New member `clueflow_style_stack' in `HTMLEngine'.

	* htmltextmaster.c (calc_min_width): Always return 0.
	(calc_preferred_width): Return bogus 100 for now.

	* htmltextmaster.h: Removed members `minWidth', `prefWidth'.

	* htmlclueflow.h: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.
	* htmlclueflow.c: Likewise.

	* htmllinktextmaster.h: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.
	* htmllinktextmaster.c: Likewise.

	* htmllinktext.h: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.
	* htmllnktext.c: Likewise.

	* htmltext.h: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.
	* htmltext.c: Likewise.

	* htmltextmaster.h: Updated to use `HTMLFontStyle' instead of
	`HTMLFont'.
	* htmltextmaster.c: Likewise.

2000-01-08  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlclueflow.c (draw): Temporarily disabled bullet painting
	code.

	* htmlpainter.c (html_painter_set_font): Removed.
	(html_painter_set_font_style): Replaced by this one.
	(html_painter_get_font): Removed.
	(html_painter_get_font_style): Replaced by this one.
	(html_painter_new): New arg `font_manager', to set the
	`font_manager' member.
	(html_painter_draw_text): Retrieve the font using
	`html_font_manager_get_gdk_font()'.  Also, handle underline and
	strikeout according to the value of the `style' member.

	* htmlpainter.h: Member `font' removed: replaced by `font_style'.
	New member `font_manager', pointer to an HTMLFontManager.

	* htmlfont.c: Removed.
	* htmlfont.h: Removed.

	* htmlengine.c (html_engine_init): Initialize member
	`font_manager'.
	(html_engine_destroy): Destroy the font manager.

	* htmlengine.h: New member `font_manager' in `HTMLEngine'.
	Members `fs', `cs' renamed to `font_stack' and `color_stack',
	respectively.  `bold', `underline', `fontsize' removedq.

	* htmlfontmanager.c: New file.
	* htmlfontmanager.h: New file.

	* htmlpainter.c: Moved some functions around to make the code
	cleaner.
	(html_painter_alloc_color): New function.
	(html_painter_free_color): New function.

2000-01-07  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlfont.c, htmlfont.h: Removed.

	* Makefile.am (libgtkhtml_HEADERS): Added `htmlurl.h'.

	* htmlengine.c (parse_body): Insert vspace instead of creating a
	new flow for every newline in the `<pre>' case.
	(html_engine_new_flow): Removed.
	(new_flow): New function, replaces `html_engine_new_flow'.  It has
	a `style' parameter to specify the HTMLClueFlowStyle for the new
	flow.  Callers updated.
	(parse_p): Inconditionally create a new `HTML_CLUEFLOW_STYLE_P'
	flow for the `<p>' tag.  Always close the current one when you get
	a `</p>' tag.  Likewise with `HTML_CLUEFLOW_STYLE_PRE' and
	`<pre>'/`</pre>'.
	(parse_h): Inconditionally create a new flow of the appropriate
	`HTML_CLUEFLOW_STYLE_H*' style.
	(parse_t): Inconditionally create a new flow.

	* debug.c (clueflow_style_to_string): New helper function.
	(debug_dump_tree): Print the ClueFlowStyle for HTMLClueFlow
	objects using it.  Also, print the text for `HTMLLinkText' and
	`HTMLLinkTextMaster' objects as well.

	* htmlclueflow.c (calc_size): Do not split lines if style is
	`HTML_CLUEFLOW_STYLE_PRE'.
	(calc_min_width): Handle HTML_CLUEFLOW_STYLE_PRE correctly.

	* htmlclueflow.h: Added `HTML_CLUEFLOW_STYLE_PRE'.

2000-01-06  Ettore Perazzoli  <ettore@helixcode.com>

	* gtkhtml.c (key_press_event): Move the cursor forward by the
	number of characters inserted.

	* htmlengine-edit.c (html_engine_insert): Return the number of
	characters actually inserted.

	* htmltextslave.c (draw): Updated to use `HTMLText::text_len'
	instead of `HTMLTextMaster::strLen'.
	(fit_line): Likewise.

	* htmltextmaster.c (fit_line): Updated to use `HTMLText::text_len'
	instead of `HTMLTextMaster::strLen'.
	(split): Likewise.
	(insert_text): Removed.
	(remove_text): Removed.
	(html_text_master_class_init): Updated accordingly.
	(html_text_master_init): Do not initialize `strLen' anymore.

	* htmllinktextmaster.c (split): Updated to use `HTMLText::text_len'
	instead of `HTMLTextMaster::strLen'.

	* htmltextmaster.h: Removed member `strLen'.

	* htmltext.c (insert_text): Return value changed from `void' to
	`guint': return the number of characters actually inserted.  Also,
	make sure there are never two consecutive spaces in the resulting
	string.
	(html_text_insert_text): Updated accordingly.
	(calc_actual_len): New helper function for `insert_text'.
	(copy_collapsing_spaces): New helper function for `insert_text'.
	(html_text_init): Initialize `text_len'.
	(remove_text): Update `text_len'.
	(insert_text): Update `text_len'.

	* htmltext.h: New member `text_len' for storing the text's length.

	* htmlengine.c (parse_h): Do not create a new flow for the rule,
	unless there is no current flow.

	* htmlrule.c (html_rule_new): New parameter `halign'.
	(html_rule_init): Likewise.
	(set_max_width): Always set `width' to `max_width'.
	(draw): Only draw the specified percent of the width, and align
	according to the `halign' value.

	* htmlrule.h: New member `halign'.

	* htmlengine-edit.c (html_engine_insert_para): Do not add an
	`HTMLHSpace' at the end of the paragraph anymore.

	* htmlclueflow.c (html_clueflow_split): Removed HTMLHSpace kludge.

	* htmlvspace.c (accepts_cursor): New function, implementation for
	`HTMLObject::accepts_cursor()'.  Always return `TRUE'.
	(html_vspace_class_init): Install it.

	* htmlclueflow.c: New constant `VERTICAL_PAD'.
	(calc_size): Add `VERTICAL_PAD' to the `ascent' value before the
	size computation and to the `descent' value after it, if the style
	is not that of an itemized list: this pads the HTMLClueFlow
	vertically.

	* htmlimage.c: #include <gdk-pixbuf/gdk-pixbuf.h>.

2000-01-05  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (html_engine_insert_text): Rewritten to always
	create HTMLTextMasters and no HTMLHSpaces.
	(html_engine_insert_vspace): Do not create a new clueflow for the
	vspace: the vspace will just be at the end of the existing flow.
	(parse_h): Do not put the rule in a new HTMLClueFlow (that's a
	waste!).
	(close_flow): No longer append an hspace.
	(parse_p): Always create a new flow with `html_engine_new_flow()'.

	* htmlfont.c (html_font_equal): New function.

	* htmltextslave.c (split): New helper function.
	(split_at_newline): New helper function.
	(fit_line): Use them.  The TextSlave is now split at the first
	newline character before starting the fit process.

2000-01-06  Jonas Borgström <jonas_b@bitsmart.com>

	* Makefile.am : Moving htmlurl.c from libgtkhtml_SOURCES to testgtkhtml_SOURCES

	* gtkhtml.c : (gtk_html_set_base_url) : removed function, not needed.

	* gtkhtml.h : removed function gtk_html_set_base_url

	* htmlengine.c : Removed ALL use of HTMLURL from htmlengine.c. htmlengine shouldn't do any url handling.

	* htmlengine.h : Removed ALL HTMLURL variables

	* testgtkhtml.c : testgtkhtml.c is now doing ALL url handing, it shouldn't be in htmlengine.c
	
2000-01-06  Jonas Borgström <jonas_b@bitsmart.com>
 
	This adds support for scaling images.
	OBS! You need a fresh gdk_pixbuf from the CVS.

	* htmlimage.h : New members: gboolean scaled and GdkPixbuf *scaled_pixbuf;

	* htmlimage.c : (destroy) : unref scaled_pixbuf if used;
	(html_image_update_scaled_pixbuf) : New function updates the local
	scaled copy of image_ptr->pixbuf
	(html_image_setup) : Set scaled to TRUE if object->width !=
	image_ptr->pixbuf->art_pixbuf->width.
	(html_image_factory_area_updated) : Call
	html_image_update_scaled_pixbuf if scaled.
	(html_image_factory_end_pixbuf) : Call
	html_image_update_scaled_pixbuf if scaled.
	(html_image_factory_register) : Scale the image if necesary if it
	already is loaded.
	
2000-01-05  Jonas Borgström <jonas_b@bitsmart.com>

	[This adds support for references in urls.]
	
	* htmlanchor.c (find_anchor): New function.
	
	* htmlclue.c (find_anchor): New function.
	
	* htmltable.c (find_anchor): New function.

	* htmlengine.c (html_engine_begin): Check if the url wants to view
	a reference on the current page, if so don't load it again, just
	scroll.
	
	(html_engine_goto_anchor): New function. Searches for an anchor
	and scrolls the page.

	* htmlengine.h : Added new member, reference. It is the reference
	html_engine_goto_anchor searches for.

	* htmlimage.c (cleanup_images): Only destroy ptr->pixbuf if it's not NULL.

	* htmlurl.c (html_url_to_string): Add the reference to the string
	also.

	* testgtkhtml.c (entry_goto_url): g_strdup the string from the
	entry.
	(goto_url): Only call gtk_html_parse () When gtk_html_begin
	returns non NULL. Don't call gtk_html_parse when the engine only
	scrolls the page (On a #reference).

2000-01-04  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c : (parse_b): Added "clear=xxx" support in <br> tags.
	(parse_d): Fixed dt function. 
	http://cvs.gnome.org/bonsai/rview.cgi?root=/cvs/gnome looks better now.
	
	(parse_table): Added support for nowrap argument in <td> tags.
			Now http://www.themes.org looks ok.
	
	(parse_table): Added workaround for bad html in table and form combination, 
		       to make gnome bonsai pages render ok.
	
	(parse_f): With a <form action=> defaults to the current URI.
	
	(html_engine_insert_text): Uses HTMLText instead of HTMLTextMaster with NOWRAP

	* htmlengine.h: New variable gboolean noWrap.

	* htmlurl.[ch] (html_url_dup): New flag HTML_URL_DUP_NOCGIARGS.
		
2000-01-03  Jonas Borgström <jonas_b@bitsmart.com>
	
	* Makefile.am : Added htmlimageinput.c and htmlimageinput.h

	* gtkhtml.c (button_press_event): Call html_engine_mouse_event

	* htmlengine.c (html_engine_mouse_event): New function.
	(parse_input): Added imageinput support.

	* htmltype.[ch]: Added class HTMLImageInput.
	
	* htmlimageinput.[ch]: New files.

2000-01-03  Jonas Borgström <jonas_b@bitsmart.com>

	* Makefile.am : Added htmltextarea and htmlselect
	
	* htmlbutton.c (draw): Removed function.
	
	* htmltextinput.c (draw): Removed function.
	
	* htmlradio.c (draw): Removed function.
	
	* htmlcheckbox.c (draw): Removed function.
	
	* htmlselect.[ch]: New file.

	* htmltextarea.[ch]: New file.

	* htmlelement.c (draw): Added function.

	* htmlengine.c (parse_t): Added <textarea> support.
	
	* htmlengine.h: Added inTextArea and formTextArea.

	* htmltype.[ch]: Added class HTMLTextArea.

	* tests/test9.html: Extended test.

2000-01-02  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine-edit.c (delete_same_parent): Save the parent before
	destroying the object.

	* htmlclueflow.c (html_clueflow_split): Set tail.

	* htmlengine-edit.c (delete_different_parent): Do not move
	TextSlaves; destroy them instead.

	* htmltext.c (remove_text): Always queue a redraw for the parent.

2000-01-02  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c (parse_input): Added more support for <input> tag
	
	* htmlbutton.[ch], htmltextinput.[ch], 
	  htmlradio.[ch], htmlcheckbox.[ch],
	  htmlhidden.[ch], htmlform.[ch] and
	  htmlelement.[ch] More frame work.

	* gtkhtml.[ch], htmlengine.[ch]: Added New signal 'submit'

	* testgtkhtml.c: Added submit support.

2000-01-02  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlfont.c (html_font_calc_width): Made const safe.

2000-01-02  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine-edit.c (html_engine_delete): Rewritten in a saner
	way.
	(delete_same_parent): Helper function for `html_engine_delete'.
	(delete_different_parent): Helper function for
	`html_engine_delete'.

	* htmldrawqueue.c (draw_obj): Renamed `x', `y', `width', `height'
	to `x1',`y1', `x2', `y2' so that the names make sense.  Also, clip
	the painting region.

2000-01-02  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (parse_l): Do not use `indentSize' anymore -- just
	use `listLevel'.

2000-01-02  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c (parse_input): Added more support for <input> tag
	
	* htmlbutton.[ch] : new files, button form element.

	* htmltextinput.[ch]: New files, textinput form element.
	
	* htmlradio.[ch]: New files, radio form element.
	The radio elements start flickering on mouseover.
	
	* htmlcheckbox.[ch]: New files, checkbox form element.

	* htmlhidden.[ch]: New files, hidden form element.

	* htmlclue.c (destroy): Enabled destroying again.

	* htmllinktextmaster.c: Fixed incorrect parent_class.

	* htmltable.c (destroy): New function, free objects.

	* htmltype.[ch]: Added new classes.
	
	* Makefile.am: Added New files

2000-01-01  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlanchor.c (set_max_ascent): Do not change the y.  I have no
	idea why this is done, and breaks the layout of anchors.

	* htmlengine.c (html_engine_new_flow): Argh!  It was setting the
	indentation level in an hideous way.  Anyway, it currently simply
	uses the parameter in `html_clueflow_new()'.
	(INDENT_SIZE): Constant removed.  Instead, we increment/decrement
	indentation level by 1, as HTMLClueFlow takes care of using the
	correct raw offset for us now.
	(parse_b): Modified accordingly.
	(parse_d): Likewise.
	(parse_o): Likewise.
	(parse_u): Likewise.
	(parse_l): Instead of doing all the cluev/clueh/clueflow mess,
	just create a clueflow with an itemized style.  Wee!  This
	dramatically reduces the complexity of the code and the overhead
	of itemized lists in the tree.
	(to_roman): Removed.

	* htmltext.c (remove_text): Actually return a value, as expected.
	(html_text_remove_text): Likewise.

	* htmlclueflow.c (html_clueflow_init): New parameters `font',
	`style', `level' to initialize the corresponding new members.  Do
	not initialize `curr', `tail', `head' as they are initialized by
	`html_clue_init()' already.
	(html_clueflow_new): New parameters `font', `style' and `level',
	passed to `html_clueflow_init()'.
	(INDENT_UNIT): New constant.
	(set_max_width): Use `level' instead of `indent', by multiplying
	by `INDENT_UNIT'.
	(calc_min_width): Likewise.
	(calc_size): Likewise.
	(calc_preferred_width): Likewise.
	(draw): New function, implementation for `HTMLObject::draw'.  This
	is now necessary to draw the bullets/numbers with style
	`HTML_CLUEFLOW_STYLE_ITEM*'.
	(html_clueflow_class_init): Install it.

	* htmlclueflow.h: New enum `HTMLClueFlowStyle'.  New members
	`font', `level', `style' in `HTMLClueFlow'.  Removed member
	`indent'.

	* htmlobject.h: Do not #include "htmlfont.h" anymore.

2000-01-01  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c (parse_i): Added support for <input> tag
	(parse_f): Added support for <form> tag
	(parse_input): New function
	
	* htmlengine.h: Added new members form and formList

	* htmlform.c: New file, initial form support
	* htmlform.h: New file.
	
	* testgtkhtml.c: Added test9.html.
	
	* test9.html: New form test.

	* Makefile.am: Added htmlform.c and htmlform.h

1999-12-31  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlclueflow.c (calc_size): Set `o->y' as for some reason it
	does not work without it.  I have to find out what this is exactly
	for.

1999-12-31  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.c (close_flow): Avoid segfault if there is no prev.

1999-12-31  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlclueflow.c (html_clueflow_init): Removed parameters `x',
	`y', `max_width', `percent'.  I have no idea why they are here
	actually.
	(html_clueflow_new): Likewise.  All callers updated.

	* htmlengine-edit.c (html_engine_delete): Merge the next clueflow
	with the current one if deleting at the end of the flow itself.
	This does not completely work yet; I have to fix some stuff in the
	way the tree is generated first.

	* htmlengine.c (parse_m): Made local variable `content' const
	correct.

	* htmlclue.c (html_clue_remove): New function.
	(html_clue_prepend): Doc'ed and added preconditions.
	(html_clue_append): Likewise.

	* htmltext.c (remove_text): Return the number of characters
	actually deleted.
	(html_text_remove_text): Likewise.
	* htmltextmaster.c (remove_text): Updated accordingly.

1999-12-31  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine-edit.c (html_engine_insert_para): Inserting a
	paragraph at the beginning of a paragraph correctly results in an
	empty paragraph now.

	* htmlclueflow.c (html_clueflow_split): Deal with splitting at the
	head of the clue correctly.
	(calc_size): Consider the object's height even if at the left
	margin.  I am not sure this is correct fix, but I don't see the
	reason for not doing it this way, and the previous code did not
	handle a hspace alone in a clueflow as expected.

1999-12-30  Jonas Borgström <jonas_b@bitsmart.com>

	* htmlengine.c (parse_m): Added support for META refresh
	
	* htmlengine.[ch] (redirect): New signal
	
	* gtkhtml.[ch] (redirect): New signal

	* testgtkhtml.c (on_redirect): New function, support for META redirection.

1999-12-30  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlobject.c (destroy): Do not deal with the font anymore.

	* htmlobject.h: Removed member `font' from `HTMLObject'.  Bleargh.
	This was truly awful and caused a lot of confusion in the code (as
	`HTML_{TEXT,HSPACE} (obj)->font' was used and `obj->font' was
	always NULL).  It also wasted 4 bytes per object just for nothing.

	* htmltext.c (html_text_init): Precondition: the font pointer must
	not be NULL.

	* htmllinktext.c (split): New function, implementation for
	`HTMLText::split'.
	(html_link_text_class_init): Install it.

	* htmllinktextmaster.c (split): New function, implementation for
	`HTMLText::split'.
	(html_link_text_master_class_init): Install it.

	* htmltextmaster.c (split): New function, implementation for
	`HTMLText::split'.
	(html_text_master_class_init): Install it.

	* htmltext.c (html_text_split): New function.
	(split): New function, default implementation for
	`HTMLText::split()'.
	(html_text_class_init): Install it.

	* htmltext.h: New virtual method `split'.

	* htmlclue.c (html_clue_prepend): New function.
	(html_clue_append_after): New function.

	* htmllinktextmaster.c (html_link_text_master_init): Removed
	parameter `painter'.
	(html_link_text_master_new): Likewise.

	* htmlclue.c (html_clue_append): Set the child's `next' pointer to
	NULL.

	* htmltextmaster.c (html_text_master_init): Removed parameter
	`painter'.
	(html_text_master_new): Likewise.

	* htmltext.c (html_text_init): Removed parameter `painter'.
	(html_text_new): Likewise.

	* htmlhspace.c (html_hspace_init): Removed parameter `painter'.
	(html_hspace_new): Likewise.

	* htmlclue.c (html_clue_split): New function.

	* htmlobject.c (html_object_set_parent): Allow setting a NULL
	parent.

	* htmlcursor.c (forward): Never put the cursor after the last
	character of the text.
	(backward): Likewise.

	* htmlengine.c: Moved helper functions on top.
	(close_flow): New helper function for closing the current
	ClueFlow.
	(block_end_pre): Use it.
	(html_engine_insert_vspace): Use it.
	(block_end_list): Use it.
	(block_end_indent): Use it.
	(parse_b): Use it.

	* htmlhspace.c (draw): Call `HTMLObject::draw()' so that we can
	have the cursor on this.
	(accepts_cursor): New function, implementation for
	`HTMLObject::accepts_cursor()'.
	(html_hspace_class_init): Install it.
	(html_hspace_init): Set the width to 1 if the hspace is invisible.

	* htmlengine.c (html_engine_end): Move the cursor to the home
	position only if the engine is in the editable state.

1999-12-29  Ettore Perazzoli  <ettore@helixcode.com>

	* htmldrawqueue.c (html_draw_queue_flush): Destroy the object
	(without drawing it) if it has `free_pending' true.

	* htmlobject.c (destroy): If the object has a redraw pending, do
	not `g_free()' it; instead, set `free_pending' to `TRUE'.
	(html_object_init): Set `free_pending' to `TRUE'.
	(html_object_destroy): If `free_pending' is true, just `g_free()'
	the object instead of calling the `destroy' method.

	* htmlobject.h: New member `free_pending' in `HTMLObject'.

	* gtkhtml.c (key_press_event): Handle `GDK_BackSpace' by moving
	the cursor to the left and then, if the movement was successful,
	deleting to the right.

	* htmlengine-edit.c (html_engine_move_cursor): Return value
	changed to `guint': return the number of movement actions actually
	taken.  Also, I cleaned up the code a bit.

	* htmlcursor.c (forward): Return value type changed to `gboolean':
	return TRUE if the movement was successful, FALSE otherwise.
	(backward): Likewise.
	(html_cursor_forward): Likewise.
	(html_cursor_backward): Likewise.
	(html_cursor_up): Likewise.
	(html_cursor_down): Likewise.
	(backward): If the cursor is in a NULL position at the beginning
	of the call, move it home.  (Temporary, but consistent with what
	the other cursor movement functions do.)

	* htmlengine-edit.c (queue_draw_for_cursor): Queue the draw even
	if we are not on a text element.

	* htmlcursor.c (next): Removed debugging messages.
	(debug_location): New function to print the cursor position on the
	HTML tree for debugging purposes.
	(html_cursor_home): Use it.
	(html_cursor_forward): Likewise.
	(html_cursor_backward): Likewise.
	(html_cursor_up): Likewise.

	* htmlrule.c (accepts_cursor): New function, implementation of
	`HTMLObject::accepts_cursor'.  This returns TRUE so that you can
	now put the cursor on a rule.
	(html_rule_class_init): Install it.
	(draw): Call `HTMLObject::draw()' so that the cursor is drawn when
	on the rule.  Also, fixed the out-of-area check.

	* htmlcursor.c (forward): Use `html_object_accepts_cursor()'.
	(backward): Likewise.
	(html_cursor_up): Deal with non-HTMLText objects.
	(html_cursor_down): Likewise.

	* htmltext.c (accepts_cursor): New function, implementation of
	`HTMLObject::accepts_cursor'.
	(html_text_class_init): Install it.

	* htmlobject.c (html_object_accepts_cursor): New function.
	(accepts_cursor): New function, default implementation for the
	`accepts_cursor' virtual method.
	(html_object_class_init): Install it.

	* htmlobject.h: New virtual method `accepts_cursor'.

	* htmlengine.c (html_engine_get_type): Removed prototype here.
	* htmlengine.h (html_engine_get_type): Moved here.

	* htmlengine-edit.c (queue_draw_for_cursor): Use
	`html_object_is_text()'.
	(html_engine_insert): Likewise.

	* htmlcursor.c (is_text): Removed.
	(forward): Use `html_object_is_text()' instead.
	(backward): Likewise.

	* htmlobject.c (html_object_is_text): New function.  Ugliest thing
	on Earth, but cheap and working for now.

	* htmlengine-edit.c (html_engine_delete): Added precondition:
	check that `e' is an HTMLEngine.
	(html_engine_insert): Likewise.

	* htmlengine.h (IS_HTML_ENGINE): Renamed to `HTML_IS_ENGINE'.
	(IS_HTML_ENGINE_CLASS): Renamed to `HTML_IS_ENGINE_CLASS'.
	(TYPE_HTML_ENGINE): Renamed to `HTML_TYPE_ENGINE'.

1999-12-28  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlpainter.c (html_painter_draw_cursor): Fix the cursor height:
	it was one pixel too high.

	* htmlobject.c (html_object_calc_abs_position): Take account for
	the ascent.

	* gtkhtml.c (idle_handler): Make cursor visible.

	* htmlengine.c (html_engine_make_cursor_visible): New function.

	* gtkhtml.c (key_press_event): Handle `GDK_Delete' and
	`GDK_KP_Delete'.

	* htmlengine-edit.c (html_engine_delete): New function.

	* htmltextmaster.c (remove_text): New function, implementation for
	the `remove_text' method.
	(html_text_master_class_init): Install it.

	* htmltext.c (html_text_insert_text): Added precondition on
	parameter `engine'.
	(html_text_remove_text): New function.
	(remove_text): New function, default implementation for the
	`remove_text' method.
	(html_text_class_init): Install it.

	* htmltext.h: New virtual method `remove_text'.

	* htmlobject.c (html_object_calc_abs_position): Actually use local
	variable `p'.

	* htmlcursor.c (forward): New helper function.
	(html_cursor_forward): Use it.  Added preconditions.
	(backward): New helper function.
	(html_cursor_backward): Use it.  Added preconditions.
	(html_cursor_up): Set the target X value before anything else, to
	make sure it is always set correctly.  Use `backward()' instead of
	`html_cursor_backward()'.
	(html_cursor_down): Likewise.  Use `forward()' instead of
	`html_cursor_forward()'.
	(html_cursor_new): Initialize `have_target_x' to FALSE, not TRUE.

	* htmltextmaster.c (calc_char_position): Make sure the coordinates
	are always calculated.

	* htmltextslave.c (fit_line): Destroy the next object instead of
	just `g_free()'ing it.  Do not kill the space between the various
	TextSlaves: instead, keep it at the end of the slave.

	* htmlengine-edit.c (queue_draw_for_cursor): Do nothing if the
	pointer to the current object is NULL.

	* htmlurl.c (concat_dir_and_file): Made static.

	* testgtkhtml.c (netin_stream_free): Call `gtk_html_end()' again.
	It does not seem to cause crashes anymore.

	* htmldrawqueue.c (draw_obj): Removed debugging message.

	* gtkhtml.c: Do not #include <stdio.h> anymore.
	(html_engine_draw_pending_cb): Removed debugging message.

	* htmlcursor.c (html_cursor_forward): Skip TextMaster-derived
	objects.

	* gtkhtml.c (key_press_event): Handle `GDK_Up' and `GDK_Down'.

	* htmlengine-edit.c (html_engine_move_cursor): Handle
	`HTML_ENGINE_CURSOR_UP' and `HTML_ENGINE_CURSOR_DOWN'.

	* htmlcursor.c (html_cursor_new): Init `target_x',
	`have_target_x'.
	(html_cursor_equal): New function.
	(html_cursor_up): New function.
	(html_cursor_down): New function.
	(html_cursor_forward): Set `have_target_x' to FALSE.
	(html_cursor_backward): Likewise.

	* htmlcursor.h: New members `target_x', `have_target_x' in
	`HTMLCursor'.

	* htmlobject.c (html_object_calc_abs_position): New function.

	* htmltextmaster.c (calc_char_position): Implementation of the
	`HTMLText::calc_char_position' method.
	(html_text_master_class_init): Install it.

	* htmltext.c (html_text_calc_char_position): New function.
	(calc_char_position): Default implementation for the
	`calc_char_position' method.
	(html_text_class_init): Install it.

	* htmltext.h: New virtual method `calc_char_position'.

1999-12-26  Ettore Perazzoli  <ettore@helixcode.com>

	* htmltext.c (insert_text): Relayout the parent instead of just
	this text.

	* htmlobject.c (relayout): Set the X/Y position manually if this
	is the toplevel object.  Ugly, but there is no way around it for
	now.

1999-12-23  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine-edit.c (html_engine_move_cursor): Queue a redraw for
	the cursor.

	* htmltextmaster.c (queue_draw): New function, implementation for
	the `queue_draw' method.
	(html_text_master_class_init): Install it.

	* htmltext.c (html_text_queue_draw): New function.
	(queue_draw): Default implementation for the `queue_draw' method.
	(html_text_class_init): Install it.
	(insert_text): Queue a draw if the parent did not change after
	relayout (and consequently did not queue a draw for itself).

	* htmltext.h: New virtual method `queue_draw'.

	* htmlclueflow.c (calc_size): Do not assign `o->y' anymore.  I am
	not 100% sure that this does not break anything, but at the same
	time I don't see any reason why the y value should be set here.
	So if this breaks, probably it means that something is broken
	somewhere else.

	* htmlcluev.c (calc_size): Replaced hideous binary shift with a
	multiplication.

        [1999-12-22]

	* htmlfont.c (create_gdk_font): `family' made const.
	(html_font_new): Removed unused variable.
	(create_gdk_font): Removed unused variable.

	* htmlcursor.c: #include "htmlclue.h".

	* htmlobject.h: Moved all the typedefs on top, before the #include
	section.

	* htmltext.c (html_text_insert_text): New parameter `engine'.
	(insert_text): New parameter `engine'.  Queue a redraw for the
	object.

	* htmltext.h: New parameter `engine' in method `insert_text'.

	* htmlobject.c (html_object_relayout): New argument `engine'.
	(relayout): New argument `engine'.  Queue a redraw for the object
	if the size changes and the object has no parent, or if the size
	changes and the parent's size does not change.

	* htmlobject.h: New argument `engine' in method `relayout'.

	* htmlengine.c (html_engine_queue_draw): New function.

	* htmlengine-edit.c (html_engine_move_cursor): Do not redraw
	everything.

	* htmlcursor.c (html_cursor_backward): Removed debugging message.
	(html_cursor_forward): Removed debugging message.

	* gtkhtml.c (html_engine_url_requested_cb): First argument
	corrected from `GtkHTML' to `HTMLEngine'.
	(html_engine_draw_pending_cb): New function.
	(gtk_html_new): Connect it to the "draw_pending" signal of the
	HTMLEngine.

	* htmlengine.c: New signal `draw_pending'.
	(html_engine_class_init): Install it.

	* htmlengine.h: Type of first argument in the `url_requested'
	method corrected from `GtkHTML' to `HTMLEngine'.  New signal
	`draw_pending'.

	* gtkhtml.c (idle_handler): New function, flushing the engine's
	draw queue.
	(init): Init it.
	(destroy): Remove pending idle handler.
	(queue_draw): New utility function installing the idle handler.

	* htmlengine.c (html_engine_flush_draw_queue): New function.

	* gtkhtml.h: New member `idle_handler_id' in `GtkHTML'.

	* gtkhtml.c (destroy): Call the parent class' `destroy' method.

	* htmlengine.h: New member `draw_queue' in `HTMLEngine'.
	* htmlengine.c (html_engine_init): Init it.
	(html_engine_destroy): Destroy it.

	* gtkhtml.c: Cleaned up a bit.

	[1999-12-21]

	* htmllinktext.c (html_link_text_new): Use `g_print' instead of
	`printf' for debugging messages.

	* htmltext.c (draw): Removed debugging mesasge.

	* htmlobject.h: New member `redraw_pending' in `HTMLObject'.
	* htmlobject.c (html_object_init): Initialize it to FALSE.

	* htmldrawqueue.c: New file.
	* htmldrawqueue.h: New file.

	* htmltextslave.c (draw): Draw the cursor if it's in the owner,
	instead of the slave.

	* htmlcursor.c (html_cursor_forward): Move on the masters instead
	of the slaves.  The slaves are not a good place for anchoring the
	cursor, as they can be destroyed/recreated without the cursor's
	control.
	(html_cursor_backward): Likewise.

	[1999-12-20]

	* htmlengine.c (html_engine_insert_text): `str' made const.
	`g_strdup()' strings before passing to the text object creation
	functions.

	* htmltextmaster.c (insert_text): New HTMLTextMaster-specific
	implementation for the `insert_text' virtual method.
	(html_text_master_class_init): Install it.

	* htmltext.c (insert_text): Make the text pointer point to the new
	buffer.

	* testgtkhtml.c (main): Removed unused variables.

	* gtkhtml.c (key_press_event): If we are given a nonempty string,
	insert it and move the cursor to the right.

	* htmltext.c (insert_text): Relayout parent.
	(html_text_class_init): Install `insert_text' as the default
	implementation for the `insert_text' method.

	* htmlengine-edit.c (html_engine_cursor_move): Renamed to
	`html_engine_move_cursor'.
	(html_engine_insert_text): New function; not quite finished yet.

	* htmlengine-cursor.c: Renamed to `htmlengine-edit.c'.
	* htmlengine-cursor.h: Renamed to `htmlengine-edit.h'.

	* htmlengine.h: Member `show_cursor' in `HTMLEngine' renamed to
	`editable'.

	* htmlengine.c (html_engine_show_cursor): Renamed to
	`html_engine_set_editable'.

	* htmlobject.c (html_object_relayout): New function.
	(relayout): Default implementation for `relayout'.
	(html_object_class_init): Install it.

	* htmlobject.h: New method `relayout'.

	* htmltextmaster.c (htmL_text_master_get_slave): New function.

	* htmltext.c: Make the `insert_text' method get an integer offset
	instead of a pointer to an `HTMLCursor' object.
	(html_text_insert_text): Updated accordingly.

	[1999-12-13]

	* htmlobject.c (html_object_check_point): Removed debugging code.
	(html_object_draw): Removed debugging code.

1999-12-20  Ariel Rios  <jarios@usa.net>

	* gtkhtml.h: (gtk_html_stream_unref): Moved
	  from gtkhtm-private.h as per Elliot's 
	  recomendation.
	  (gtk_html_stream_ref): Ditto.
	  
	* gtkhtml-private.h:(gtk_html_stream_unref) The function
	  header was moved unto gtkhtml.h
	  (gtk_html_stream_ref) Ditto.

1999-12-19  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlurl.c (html_url_append_path): Strip cgi args
	
1999-12-15  Ariel Rios <jarios@usa.net>
	
          Contributed by Marius Vollmer.

	* gtkhtml-private.h: Add ref_count element in GtkHTML struct.
	(gtk_html_stream_unref): New prototype.
	(gtk_html_stream_ref): New prototype.
	  These two functions would maintain a reference count on a
	  GtkHTMLStream handle so that the struct would only be freed when the
	  ref count reaches zero. gtk_html_stream_new would return a stream
	  with ref_count == 1 and gtk_html_stream_end would flag the stream as
	  terminated and call gtk_html_stream_unref; gtk_html_stream_write
	  would recognize a terminated stream.

	* htmlstream.c (gtk_html_stream_unref): Added.
	(gtk_html_stream_ref): Added.
	(gtk_html_stream_new): Added declararion of new ref_count element.
	(gtk_html_stream_write): Instead of g_freeing the stream here, we
	set write_callback and end_callback as NULL. Then we call
	gtk_html_stream_unref to g_free the handle.

1999-12-15  Havoc Pennington  <hp@redhat.com>

	* gtkhtml.c (gtk_html_realize): Add button press/release to the
	event mask so we get link clicks

1999-12-15  Havoc Pennington  <hp@redhat.com>

	* htmlurl.c (html_url_new): put in a phony path if we return
	because the path string has length 0

1999-12-15  Havoc Pennington  <hp@redhat.com>

	* testgtkhtml.c (main): remove explicit adjustment-setting

	* gtkhtml.c (gtk_html_new): no adjustment args, don't init the
	adjustment fields. This causes Breakage but it's necessary
	probably (and approved by Anders)

	* htmlurl.c (html_url_new): Put in a warning if an HTMLURL with
	NULL path is returned, this is a bug that needs fixing
	(html_url_append_path): put in an assertion that url->path != NULL

1999-12-15  Havoc Pennington  <hp@pobox.com>

	* gtkhtml.c (gtk_html_set_adjustments): zero the connection ID
	if we don't fill it in, avoids a warning message.

1999-12-14  Havoc Pennington  <hp@pobox.com>

	* gtkhtml.c (gtk_html_new): Use
	gtk_widget_set_scroll_adjustments() to set the adjustments
	(gtk_html_class_init): install a scroll adjustments handler
	(gtk_html_set_adjustments): implement this - it connects to the
	adjustments.
	(gtk_html_class_init): add destroy handler

	* gtkhtml.h: add fields to store adjustment connections

1999-12-13  Ettore Perazzoli  <ettore@helixcode.com>

	* gtkhtml.c (gtk_html_size_allocate): Do not call
	`html_engine_calc_absolute_pos' anymore.

	* htmlengine.c (html_engine_calc_absolute_pos): Removed.
	(html_engine_update_event): Do not call it anymore.

	* htmltable.c (calc_absolute_pos): Removed.
	(html_table_class_init): Do not install anymore.

	* htmlclue.c (calc_absolute_pos): Removed.
	(html_clue_class_init): Do not install anymore.

	* htmlobject.c (html_object_init): Do not initialize `abs_x',
	`abs_y' anymore.
	(calc_absolute_posi: Removed.
	(html_object_class_init): Do not install anymore.
	(html_object_calc_absolute_pos): Removed.

	* htmlobject.h: Remove `abs_x', `abs_y'.  Removed
	`calc_absolute_pos' virtual function.

1999-12-12  Miguel de Icaza  <miguel@helixcode.com>

	* htmlengine.c (draw_background): Removed the clipping from here,
	it fixes the double buffering problems.

	* htmlfont.c (create_gdk_font): Fixed memory leaks.

1999-12-12  Ettore Perazzoli  <ettore@helixcode.com>

	* gtkhtml.c (gtk_html_init): Use `GDK_HAND2' and `GDK_LEFT_PTR' as
	the hand/arrow cursors.

	* htmltext.c (html_text_insert_text): New function.
	(insert_text): New function.

	* htmltext.h: New virtual method `insert_text'.

	* htmlurl.c (html_url_destroy): Added precondition.

	* gtkhtml.c (gtk_html_set_geometry): Removed unused function.

	* htmlpainter.c (html_painter_set_font): Destroy the existing
	font, duplicate the new one.

	* htmlfont.c (html_font_destroy): Do not unref the GdkFont if
	NULL.
	(html_font_dup): New function.

	* testgtkhtml.c (title_changed_cb): Removed debugging message.
	Also, free memory returned by `g_strdup_printf()'.

	* htmltable.c (calc_col_info): Free existing row information
	before allocating new.
	(html_table_init): Make sure all the members are initialized.

1999-12-12  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlurl.c (html_url_to_string): html_url_to_string produced
	incorrect urls on url with a port number.
	
	* htmlengine.c (parse_i): Modified the image loading a bit.

1999-12-12  Jonas Borgström  <jonas_b@bitsmart.com>

	* testgtkhtml.c (on_stop): Delete all requests.
	(goto_url): Delete requests.

1999-12-12  Ettore Perazzoli  <ettore@helixcode.com>

	* htmltextslave.c (fit_line): Set `prev' on the next, if any.

	* gtkhtml.c (key_press_event): Move left too.

	* htmlcursor.c (html_cursor_backward): Implemented.
	(prev): Removed.

1999-12-12  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlengine.c (parse_table): Added support for backgrounds in tables.
	(parse_href): Better handling of "" hrefs.

	* htmlimage.c (html_image_factory_register(): Insert url into list
	before emitting signal.

	* htmlpainter.c (html_painter_draw_background: Added two
	parameters, pix_width, pix_height.

	* htmltablecell.c (draw): Added support for backgrounds:
	http.//www.themes.org looks great now :)
	(html_table_cell_set_pixmap): New function.

1999-12-12  Ettore Perazzoli  <ettore@helixcode.com>

	* testgtkhtml.c (on_link_followed): New function.
	(main): Instead of connecting `on_button_release_event' to the
	"button_release_event" signal, connect `on_link_followed' to
	"link_followed".
	 (on_button_release_event): Removed.

	* gtkhtml.c: `link_followed' signal renamed to `link_clicked'.
	(gtk_html_button_press_event): New function.  Not doing anything
	for now.
	(gtk_html_button_release_event): New function.  Emit
	"link_clicked" on button release if the pointer is on a URL.
	(gtk_html_class_init): Install them as the "button_press_event"
	and "button_release_event" implementations.

1999-12-11  Ettore Perazzoli  <ettore@helixcode.com>

	* htmltextslave.c (fit_line): Do not assign to `next_obj->prev' if
	`next_obj' is NULL.

1999-12-11  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlengine.c (html_engine_set_base_url): New function
	(parse_s): New function, added support for <small> and </small>
	(html_engine_begin): set newPage = TRUE
	(html_engine_update_event): Scroll page to top if newPage is set.

	* htmlengine.h:(html_engine): new member newPage
	
	* gtkhtml.c (gtkhtml_set_base_url): New function

	* testgtkhtml.c (main): Add a default filter callback (request_terminater).
	(request_terminater): New function. Terminates requests.
	(url_requested): Adds filters for 4 different redirections.
			 Redirections are now handled properly.
	(redirectFilter): New function. calls gtk_html_set_base_url on redirection.
	
	* htmlurl.c (html_url_new): if path == NULL set it to "/"
	(html_url_append_path) Cut the path at the first '/' from the right.
	
1999-12-11  Ettore Perazzoli  <ettore@helixcode.com>

	* htmltextslave.c (fit_line): Update the `prev' pointer.

	* htmltextmaster.c (fit_line): Update the `prev' pointer.

	* htmlclue.c (html_clue_append): Set the `prev' pointer as well.

	* htmlobject.c (html_object_init): Initialize it.

	* htmlobject.h: New member `prev' in `HTMLObject'.

	* htmlcursor.c (html_cursor_backward): New function, does nothing for now.

1999-12-11  Matt Wilson  <msw@redhat.com>

	* htmlurl.c (html_url_append_path): removed dependency on
	gnome by re-implementing g_concat_dir_and_file

1999-12-11  Elliot Turner  <turnere@MimeStar.com>

	* htmlengine.c (parse_m): New function to deal with the `meta'
	tag.
	(parse_table): Remove tmpCell stuff that resulted in random
	segfaults.
	(parse_i): Don't set the parent in the ClueAligned object in
	advance.
	(parse_table): Likewise.

1999-12-11  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlcursor.c (html_cursor_forward): Some navigation fixes.

	* debug.c (debug_dump_tree): Print out the value of the parent
	pointer too.

	* htmltextslave.c (fit_line): Set the parent on the slave.

	* htmltextmaster.c (fit_line): Set the parent on the slave.

	* htmltextslave.c (draw): Draw the cursor if the cursor is here.

	* htmltext.c (draw): Draw the cursor if the cursor is here.

	* htmlobject.c (draw): Draw the cursor if the cursor is here.

	* htmlobject.h: New argument `cursor' in the `draw' method.  All
	of the related functions updated accordingly.

	* htmlengine-cursor.h, htmlengine-cursor.c: New files.

	* gtkhtml.c (key_press_event): New function, implementation for
	the `key_press_event' virtual method.
	(gtk_html_realize): Removed double realization.  Also, add
	`GDK_KEY_PRESS_MASK' and `GDK_KEY_RELEASE_MASK' to the event mask
	for the bin window.

	* htmltext.c (draw_cursor): New function, implementation of the
	`draw_cursor' virtual method.
	(html_text_class_init): Install it.

	* htmlpainter.c (html_painter_draw_cursor): New function.

	* htmlcursor.c (html_cursor_forward): New function to make the
	cursor go forward on the tree.

	* testgtkhtml.c: Big hack to at least make the stop button really
	stop loading.  Something is still wrong, though, as we get no
	callback when the input stream ends.  Help is welcome.  So, there
	is a new local variable called `html_handle' to hold the main html
	stream handle.
	(goto_url): Initialize it with the return value from
	`gtk_html_begin'.
	(stop_cb): Stop the stream and set `html_handle' to NULL.

	* htmlengine.c (html_engine_end): Position the cursor at the
	beginning of the document.

	* htmlcursor.c (html_cursor_home): New function to position the
	cursor at the beginning of the document.

1999-12-10  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlcursor.c (html_cursor_destroy): Added precondition.

	* htmlengine.h (html_engine_get_doc_width): Added prototype.

	* htmlengine.c (parse_body): Add cast to `html_clue_append' call.

	* htmlpainter.h: New member `black' in `HTMLPainter', holding the
	GdkColor for black.
	* htmlpainter.c (html_painter_realize): Allocate it.

	* htmlengine.c (draw_cursor): New function.
	(html_engine_parse): Set the cursor to point at the first clue.

	* htmlpainter.c (html_painter_draw_line): New function.

	* htmlengine.h: New members `cursor', `show_cursor' in `struct
	HTMLEngine'.
	* htmlengine.c (html_engine_init): Init them.
	(html_engine_destroy): Destroy the cursor.

1999-12-11  Anders Carlsson  <andersca@gnu.org>

	* htmlengine.c (parse_body): Add a handler for the '\n' tag
	that's used for newlines in <pre>...</pre>

1999-12-11  Anders Carlsson  <andersca@gnu.org>

	* testgtkhtml.c (main): Set policy to only show scrollbars when needed.

	* gtkhtml.c (gtk_html_calc_scrollbars): use gtk_layout_set_size ();

1999-12-11  Anders Carlsson  <andersca@gnu.org>

	* testgtkhtml.c (main): Use a scrolled window instead of
	a scroll bar.

	* gtkhtml.c (gtk_html_horizontal_scroll): Added function.
	(gtk_html_new): Connect signal to function.
	(gtk_html_calc_scrollbars): Calculate adjustment for horizontal
	scrollbar as well.

	* htmlengine.c: Added functions for calculating document width

1999-12-10  Ettore Perazzoli  <ettore@helixcode.com>

	* htmlengine.h (html_engine_draw_background): Removed prototype.

	* htmlengine.c (html_engine_show_cursor): New function.
	(html_engine_init): Initialize `show_cursor' to TRUE.
	(html_engine_draw_background): Made static and renamed to
	`draw_background'.
	(html_engine_draw): Updated accordingly.

	* htmlengine.h: New flag `show_cursor' in `struct HTMLEngine'.

	* htmlcursor.c, htmlcursor.h: New files.

1999-12-10  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlengine.c (parse_i): Do not pass NULL pointer to
	html_url_to_string.
	
1999-12-10  Ettore Perazzoli  <ettore@helixcode.com>

	* All files: updated to match these changes.

	* htmlclue.c (html_clue_append): Set the parent of the object to
	this one.

	* htmlobject.h: New member `parent' in `HTMLObject'.
	* htmlobject.c (html_object_init): Set it to NULL.
	(html_object_set_parent): New function.

1999-12-10  Jonas Borgström  <jonas_b@bitsmart.com>

	* gtkhtml.c (gtk_html_begin): Scroll page to the top on new url
	
	* htmltokenizer.c (html_tokenizer_write): Fixing parsing of entity.
	
	* htmlentity.c (html_entity_parse): Corrected function.
	
1999-12-09  Miguel de Icaza  <miguel@gnu.org>

	* htmlpainter.c (html_painter_draw_pixmap): fix the offsets.

1999-12-09  Anders Carlsson  <andersca@gnu.org>

	* htmltable.c (draw): Doh! Fixed a silly bug where
	it checked c against totalRows, changing to r reallly
	speeded up test6.html

1999-12-09  Jonas Borgström  <jonas_b@bitsmart.com>

	* htmlengine.c (parse_a, parse_b, parse_i): Send Absolute urls to
	images.

	* testgtkhtml.c: New Features:
	  * Follow links with mouse click works now.
	  * Implemented Back, Forward, Reload, Home.
	  * Added popup menu (Back, Forward, Home)
	  * Added Go menu (Back, Forward, Home and History list)
	  * Added Wheel mouse scrolling support.
	  * Prepend "http://" To urls if needed.
	  
	* htmlurl.c (html_url_append_path): Fixed correct url handling.

1999-12-08  Miguel de Icaza  <miguel@gnu.org>

	* htmlpainter.c (html_painter_end): Another off-by one error fix.
	(html_painter_draw_panel): Adapt this routine to use the double
	buffering scheme
	(html_painter_draw_background_pixmap): Ditto.

	* htmlurl.c (html_url_append_path): Memory leak fix, and crash fix.

	* htmlpainter.c (html_painter_end): Fix off by one error.
	(html_painter_new): Double buffering is now the default.
	(html_painter_draw_pixmap): Remove soptimization to fix image repainting.
	(html_painter_draw_pixmap): Use proper API.  

1999-12-07  Ettore Perazzoli  <ettore@gnu.org>

	* htmlurl.c (scan_user_and_password): Renamed to `scan_host_info'.
	Do the right thing with URLs that do not have a slash after the
	host name (e.g. because there is no path).

	* htmlengine.c (parse_href): Do the right thing with
	duplicating/changing the HTMLURL structs.

1999-12-06  Ettore Perazzoli  <ettore@gnu.org>

	* testgtkhtml.c (on_url): Removed unused variable.
	(url_requested): Made `ctmp' const.

	* htmltype.c: #include "htmlanchor.h".

	* htmlobject.c (html_object_check_point): Removed unused variable.

	* gtkhtml.c (gtk_html_set_geometry): `#if 0'ed out as currently
	unused.

	* htmlengine.h: Changed type of `url' to `HTMLURL'.
	* htmlengine.c: All functions changed accordingly (i.e. to use
	`HTMLURL' internally, instead of `gchar *').

	* htmlengine.c (parse_href): New function for dealing with links
	properly (i.e. handling relative ones etc.).
	(parse_a): Use it.

	* htmlengine.h: New member `actualURL' in `HTMLEngine'.
	* htmlengine.c (html_engine_begin): Set it.
	(html_engine_init): Init it to NULL.
	(html_engine_destroy): Free it.

	* htmlurl.c: New file.
	* htmlurl.h: New file.

	* htmlfont.c (html_font_new): Made prototype const-safe.

	* htmlpainter.h (html_painter_draw_panel): New function prototype.

	* htmlclue.h (html_clue_append_left_aligned): Added missing prototype.

	* htmltokenizer.c (html_tokenizer_write): Parse the entity with
	`html_entity_parse()'.

	* htmlentity.c, htmlentity.h: New files dealing with entity.
	(html_entity_parse): New function.

	* htmlengine.c (parse_i): Use the current URL and target for the
	new image.

	* htmlimage.c (html_image_init): New parameters `url', `target'.
	(html_image_new): Likewise.

	* htmlimage.h: New members `url' and `target' in `HTMLImage'.

1999-12-03  Ettore Perazzoli  <ettore@gnu.org>

	* testgtkhtml.c (do_request_delete): Do not delete the request.  I
	am not sure if it's supposed to be necessary or not, but it does
	cause crashes.

	* htmlengine.c (parse_b): Oops, fix the `gtk_signal_emit()' calls.

	* htmlobject.c (html_object_get_url): Removed debugging message.

	* gtkhtml.c (gtk_html_motion_notify_event): Keep track of the
	current URL through `pointer_url'.  Also, emit the signal when the
	current URL changes.

	* testgtkhtml.c: Show usage of the `on_url' signal.

	* htmlimage.c (html_image_factory_register): Set the `stream'
	member to point to the newly created stream.
	(html_image_get_stream): New function returning a pointer to the
	stream object.

	* htmlimage.h: New member `stream' in `HTMLImage'.

	* gtkhtml.c (html_engine_title_changed_cb): New signal handler for
	the `title_changed' signal in the HTMLEngine.
	(html_engine_set_base_cb): Likewise for `set_base'.
	(html_engine_set_base_target_cb): Likewise for `set_base_target'.
	(html_engine_load_done_cb): Likewise for `load_done'.
	(gtk_html_new): Connect the signal handlers to the newly created
	object.
	(gtk_html_motion_notify_event): Don't free the URL we get from
	`html_engine_get_link_at()' anymore.

	* htmlengine.c (html_engine_begin): Emit the
	`url_requested_signal' after creating the stream.

	* htmlstream.c (gtk_html_stream_new): Do not make the GtkHTML
	widget emit any signal!

	* htmlengine.c: `html_engine_signals' renamed to `signals' and
	made static.  Also, added "set_base_target", "set_base",
	"load_done", "title_changed" own signals.
	(parse_b): Make the engine emit signals, not the owner widget.
	(parse_t): Likewise.
	(html_engine_end): Likewise.

	* gtkhtml-private.h: Removed signals from here.
	* gtkhtml.c: Moved here.  Also, changed the name from
	`html_signals' to `signals'.

	* gtkhtml.h, gtkhtml.c: New signal `on_url'.

	* gtkhtml.h: New member `pointer_url' in `GtkHTML'.
	* gtkhtml.c (gtk_html_init): Init it to NULL.
	(destroy): `g_free()' it.

	* gtkhtml.c (gtk_html_motion_notify_event): Updated to the const
	return of `html_engine_get_link_at()'.

	* htmlengine.c (html_engine_get_link_at): Return value made const.
	So, we don't strdup the value from `html_object_get_url()'
	anymore.

	* gtkhtml.c (destroy): New function, implementation of the
	`destroy' method.
	(gtk_html_class_init): Install it.
	(gtk_html_realize): Set the arrow cursor as the initial cursor for
	the new widget.

	* gtkhtml.h: New members `hand_cursor' and `arrow_cursor'.
	* gtkhtml.c (gtk_html_init): Init them.

	* htmlengine.c (html_engine_get_uri_at_pointer): Renamed to
	`html_engine_get_link_at'.
	* htmlengine.h: Updated likewise.
	* gtkhtml.c (gtk_html_motion_notify_event): Updated accordingly.

1999-12-04  Anders Carlsson  <andersca@gnu.org>

	* htmlsettings.c: Fix the correct number of font sizes, it's 7 not 6.

	* htmltable.c (draw): Use html_painter_draw_panel for table borders.

	* htmlpainter.c (html_painter_draw_panel): New function for drawing a
	3d panel.

	* htmlimage.c (draw): Use html_painter_draw_panel for pictures that
	are not yet loaded.

1999-12-03  Ettore Perazzoli  <ettore@gnu.org>

	* htmllinktextmaster.c (html_link_text_master_init): `url' and
	`target' made const.  Strdup before assigning.
	(html_link_text_master_new): Likewise.
	(get_url): Removed debugging message.

	* htmllinktext.c (html_link_text_init): Strdup the URL and the
	target strings.
	(html_link_text_new): Made the `url' and `target' arguments const.
	(html_link_text_init): Likewise.

	* htmltextslave.c (get_url): Implementation of the `get_url'
	virtual method.
	(html_text_slave_class_init): Install it.

	* gtkhtml.c (motion_notify_event): New function, handler for the
	`notify_event' signal.
	(gtk_html_class_init): Install it.

1999-12-04  Anders Carlsson  <andersca@gnu.org>

	* htmlcluev.c (appended): Traverse the aligned list, not the
	regular object tree list. This fixes the slashdot bug (Finally).

1999-12-03  Ettore Perazzoli  <ettore@gnu.org>

	* htmltable.c (check_point): Implementation of `check_point'.
	(html_table_class_init): Install it.

	* htmlcluev.c (check_point): Implementation of `check_point'.
	(html_cluev_class_init): Install it.

	* htmlclue.c (check_point): Implementation of `check_point'.
	(html_clue_class_init): Install it.

	* htmlobject.c (check_point): Default implementation for
	`check_point'.
	(html_object_class_init): Install it.
	(html_object_check_point): New function.
	
	* htmlobject.h: New virtual method `check_point'.

1999-12-03  Ettore Perazzoli  <ettore@gnu.org>

	* htmltable.c (mouse_event): New function, implementing the
	`mouse_event()' virtual method.
	(html_table_class_init): Install it.

	* htmlcluev.c (mouse_event): New function, implementing the
	`mouse_event()' virtual method.
	(html_cluev_class_init): Install it.

	* htmlclue.c (mouse_event): New function, implementing the
	`mouse_event()' virtual method.
	(html_clue_class_init): Install it.

	* htmlobject.c (mouse_event): Default implementation for
	`mouse_event()'.
	(html_object_class_init): Install it.
	(html_object_mouse_event): New function.

	* htmlobject.h: New virtual method `mouse_event()'.

	* htmllinktextmaster.c: The parent class is
	`HTMLLinkTextMasterClass', not `HTMLTextMasterClass'.

	* htmlobject.h: Renamed `ClearType' to `HTMLClearType'; made the
	ids uppercase and prefixed with `HTML_CLEAR_'.  Similiar treatmant
	for `HTMLVAlignType' and `HTMLHAlignType'.  Changed values for
	`HTMLFitType' to be all uppercase and be prefixed with `HTML_FIT'
	as well.  All instances updated.

1999-11-28  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (parse_b): Handle `link=', `vlink=' and `text=' in
	`<body>'.
	(html_engine_init): Allocate `defaultSettings'.
	(html_engine_destroy): Free it.
	(html_engine_parse): AAARGH!  Colors must *never* be allocated
	with `g_new()'!  Anyway, we needed to push the default color, not
	an arbitrary black.
	(html_engine_parse): Allocate colors in the defaultSettings and
	copy to the settings.  Use the settings to set the initial font.
	(parse_a): Color and underline links according to the settings.
	(parse_table): Honour the `forceDefault' flag in the settings.
	(select_font_full): New helper function.
	(parse_c): Use it.  Set the correct font for `<code>'.
	(select_font_relative): New function.
	(parse_h): Use it to deal with header font sizes correctly.
	(parse_t): Use correct font for `<tt>'.
	(parse_p): Use correct font for `<pre>'.

	* htmlengine.h: New member `defaultSettings' in `HTMLEngine'.

	* htmlsettings.c (html_settings_set_font_sizes): New function.
	(html_settings_get_font_sizes): New function.
	(html_settings_reset_font_sizes): New function.
	(HTML_NUM_FONT_SIZES): New constant.
	(html_settings_alloc_colors): New function.
	(html_settings_copy): New function.
	(html_settings_set_fixed_font_face): New function.
	(html_settings_set_font_base_face): New function.

	* htmlsettings.h: Updated `HTMLSettings' to contain all the fields
	in the original KHTMLW code.  `fontbasesize' renamed to
	`fontBaseSize' and `bgcolor' to `bgColor', for consistency.

1999-11-28  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (select_font_relative): Call `html_engine_set_font'
	so that it does not crash.

1999-11-28  Ettore Perazzoli  <ettore@gnu.org>

	* htmlimage.c (draw): Quick hack to always draw the border
	rectangle.

	* htmltablecell.h: Fixed typo in `HTMLTableCellClass'.

	* htmlobject.c (html_object_draw): Added debug message.

	* htmlcluev.c (draw): Add `x' to `tx' and `y - ascent' to `ty', as
	the original HTMLW code does.  Also, draw left-aligned items as
	well.  Also, I fixed the drawing calls: stupid polymorphism!

1999-11-27  Ettore Perazzoli  <ettore@gnu.org>

	* htmltokenizer.c (html_tokenizer_add_pending): Fixed typo: `%
	TAB_SIZE' instead of `& TAB_SIZE'.

1999-11-27  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.h: Removed `parseFuncArray[]' from `struct
	_HTMLEngine'.
	* htmlengine.c: Moved here.
	(html_engine_init): Do not install `parseFuncArray' anymore.

	* htmlengine.c (parse_t): Implemented `<tt>' handling (wrong font
	though).

1999-11-26  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (html_engine_init): Init `inPre', `inTitle'.
	(block_end_pre): New function.
	(parse_p): Implemented `<pre>' handling.  Also, call
	`close_anchor()' appropriately for the `<p>' case.
	(html_engine_pop_font): Report a warning if the stack is empty
	after popping to prevent segfault.
	(html_engine_new_flow): Handle `inPre'.
	(parse_v): New function, implementing `<var>'.
	(html_engine_init): Install it in the parsing vtable.
	(parse_u): Enable code for `<ul>'.

	* htmlengine.h: New member `inPre' in `HTMLEngine'.

1999-11-26  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (html_engine_init): Init `tempStrings'.
	(html_engine_destroy): Free it.
	(to_roman): New function.
	(parse_l): Implemented ordered lists.
	(parse_o): Implemented.  (Parses only `<ol>' and not `<option>'
	for now.)
	(html_engine_init): Install `parse_o' in the parsing vtable.
	(block_end_list): Pop and destroy the list on the top of the
	listStack.

	* htmlengine.h: New member `tempStrings' in `HTMLEngine'.

	* htmlengine.c (html_engine_init): Init `glossaryStack'.
	(html_engine_destroy): Destroy it.
	(parse_d): Implemented `<dl>', `<dd>' and `<dt>' from the KHTMLW
	source.
	(html_engine_new_flow): Use the indent value from the HTMLEngine,
	not the clue!
	(parse_k): New function, parsing for the `<kbd>' tag.
	(html_engine_init): Install it.
	(parse_l): Call `close_anchor' for `<li>'.  Also, use
	`html_stack_is_empty()' instead of `html_stack_count()' for
	checking for emptiness.

	* htmlengine.h: New enum `HTMLGlossaryEntry'.  New member
	`glossaryStack' in `HTMLEngine'.

	* htmlstack.c (html_stack_clear): If the `free_func' is NULL,
	don't try to free elements.
	(html_stack_top): If the stack is empty, return NULL.

1999-11-26  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.h: Replaced `HTMLListStack' with an `HTMLStack'.
	* htmlengine.c: Updated accordingly.

	* htmllist.h: `ListType' renamed to `HTMLListType', `ListNumType'
	renamed to `HTMLListNumType'.  Also, changed the values to upper
	case, and prefixed them with `HTML_LIST_TYPE' and
	`HTML_LIST_NUM_TYPE' respectively.  Occurrences updated.

	* htmllist.c, htmllist.h: Removed `HTMLListStack' implementation.

	* htmlengine.c (parse_a): Get `<address>' to work.

	* htmlengine.h: Replaced the `HTMLFontStack' with an `HTMLStack'.
	* htmlengine.c: Updated accordingly.

	* htmlfont.c, htmlfont.h: Removed the `HTMLFontStack'
	implementation.

	* htmlfont.c (html_font_new): Init `textColor'.
	(html_font_destroy): Free `textColor' if not NULL.
	(html_font_set_color): New function.
	* htmlengine.c (html_engine_parse): Use it.
	(html_engine_select_font): Use it.

	* htmlengine.h: Replaced the `HTMLColorStack' stack with a
	`HTMLStack'.
	* htmlengine.c: All the functions updated accordingly.
	(html_engine_pop_color): Free the popped color.

	* htmlcolor.c, htmlcolor.h: Removed.  #inclusions from other
	source files removed as well.

	* htmlstack.c, htmlstack.h: Implementation of a generic
	`HTMLStack' type.

	* htmlengine.c: New typedef `BlockStackElement'.
	(block_stack_element_new): New static function, derived from
	`html_stack_element_new()'.
	(html_engine_push_block): Updated to use it.
	(html_block_stack_element_free): New function.
	(html_engine_free_block): Updated to use it.
	(html_engine_push_block): Removed.
	(push_block): New static function replacing it.  Former callers of
	`html_engine_push_block' updated to use it.
	(html_engine_free_block): Removed.
	(free_block): New static function replacing it.  Former callers of
	`html_engine_free_block' updated to use it.
	(html_engine_pop_block): Removed.
	(pop_block): New static function replacing it.  Former callers of
	`html_engine_pop_block' updated to use it.
	(html_engine_block_end_font): Removed.
	(block_end_font): New static function replacing it.  Former
	callers of `html_engine_block_end_font' updated to use it.
	(html_engine_block_end_color_font): Removed.
	(block_end_color_font): New static function replacing it.  Former
	callers of `html_engine_block_end_color_font' updated to use it.
	(html_engine_block_end_list): Removed.
	(block_end_list): New static function replacing it.  Former
	callers of `html_engine_block_end_list' updated to use it.
	(html_engine_block_end_indent): Removed.
	(block_end_indent): New static function replacing it.  Former
	callers of `html_block_end_indent' updated to use it.
	(html_engine_block_end_div): Removed.
	(block_end_div): New static function replacing it.  Former callers
	of `html_engine_block_end_div' updated to use it.
	* htmlengine.h: Updated prototypes accordingly.

	* htmlengine.h: New typedef `HTMLBlockStackElement' that will
	replace former `HTMLStackElement'.

	* htmlstack.c (html_stack_element_new): Removed.  This function is
	only used by `htmlengine.c' for the block stack, so the name is
	misleading.

	* htmlengine.c (parse_d): Enable code for `</div>' which was `#if
	0'ed by mistake.

1999-11-26  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (parse_table): Call `close_anchor()' when `</table'
	is encountered.  Added support for `<caption>'.  Handle headings.
	Destroy objects correctly.  Handle Left/Right alignment.  With all
	of this, this function should finally be completely ported.
	(set_base_url): New function; for now it's just a dummy.
	(select_font_relative): New function; incomplete.
	(html_engine_block_end_indent): New function.
	(parse_b): Ported `<base>', `<big>' and `<blockquote>' from
	KHTMLW.
	(parse_c): Added `<cite>' and `<code>'.  Font for `<code>' is
	wrong for now.
	(html_engine_begin): Removed unused variable.
	(html_engine_block_end_div): New function.
	(parse_d): New function, implementing only `<dir>' and `<div>' for
	now.
	(html_engine_init): Install it in the parse array.

	* htmlcluev.c (remove_aligned_by_parent): Implemented (from
	`HTMLClueV::removeAlignedByParent()').
	(calc_size): Call it (as the corresponding KHTMLW function did).

	* htmlclueflow.c (calc_size): Handle clear types correctly, using
	`html_clue_get_{left,right}_clear()'.

	* htmlclue.c (html_clue_get_right_clear): New function.
	(html_clue_get_left_clear): New function.
	(get_left_clear): Default implementation of the `get_left_clear()'
	virtual method.
	(get_right_clear): Default implementation of the `get_right_clear()'
	virtual method.
	(html_clue_class_init): Install them.
	(find_free_area): Default implementation changed to match the
	KHTMLW one.

	* htmlclue.h: New virtual methods `get_right_clear()' and
	`get_left_clear()'.
	(html_clue_get_right_clear): New prototype.
	(html_clue_get_left_clear): New prototype.

1999-11-26  Anders Carlsson  <andersca@gnu.org>

	* htmlengine.c (html_engine_draw_background): Use the new function
	when drawing backgrounds.

	* htmlpainter.c (html_painter_draw_background_pixmap): Added a new
	function for drawing the background pixmap.

	* debug.c: Adapted the debug code to the new object system.

	* htmlbullet.c (draw): Fixed the bullet redraw bug.

	* htmlimage.c (draw): Fixed the image redraw bug.

1999-11-25  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c: Added `ID_I' to enum `ID'.
	(parse_h): Removed extra `html_engine_select_font()' call which
	should not be there.
	(parse_i): Added code to deal with the `<i>' tag.
	(html_engine_set_named_color): Aaargh.  Return `TRUE'!
	(parse_a): Pass `TRUE' as the last argument to
	`html_engine_push_block()' when doing the "address" tag.

	* htmlengine.c (html_engine_set_named_color): Return value made
	`gboolean': return FALSE if the color could not be parsed.
	(parse_b): If `html_engine_set_named_color()' fails, don't mark
	the color as set.
	(parse_table): Likewise.

	* htmlengine.h (html_engine_set_named_color): Updated prototype.

1999-11-24  Ettore Perazzoli  <ettore@gnu.org>

	* htmllinktextmaster.c (html_link_text_master_class_init): Assign
	`parent_class' correctly.

	* htmlengine.c (parse_table): Use `html_object_set_bg_color()'
	instead of setting `cell->bg' directly.  Also, avoid using the
	colors if they have not set explicitly.  This fixes the random
	color bugs we were having with tables.

	* htmltablecell.c (set_bg_color): Implementation of the
	`set_bg_color' virtual method for HTMLTableCell.
	(html_table_cell_class_init): Install it.

	* htmlobject.c (html_object_set_bg_color): New function.
	(set_bg_color): Default implementation for the `set_bg_color'
	method.
	(html_object_class_init): Install it.

	* htmlobject.h: New virtual method `set_bg_color'.

	* htmltablecell.h: New member `have_bg' in `HTMLTableCell'.
	* htmltablecell.c (html_table_cell_init): Init it to `FALSE'.
	(draw): Don't draw the background if you don't have a background
	color.

	* htmlengine.c (parse_l): Removed allocation of `fontbasecolor'.
	(html_engine_draw_background): `bgColor' is now always allocated.
	(html_engine_parse): `settings->bgcolor' is no longer a pointer,
	so deal with it.
	(parse_h): Added code from KHTMLW to deal with different alignments
	and sizes.

	* htmlsettings.h: Type of members `bgcolor' and `fontbasecolor' in
	`HTMLSettings' changed from `GdkColor *' to `GdkColor'.
	* htmlsettings.c (html_settings_destroy): Updated accordingly.
	(html_settings_new): Likewise.

	* htmlengine.c (parse_b): Updated accordingly.
	(html_engine_parse): Likewise.
	(html_engine_draw_background): Likewise.

	* htmlengine.h: Type of member `bgcolor' in `HTMLEngine' changed
	from `GdkColor *' to `GdkColor'.

	* htmlclue.c (draw): Do not draw a green rect around the clue
	anymore.

	* htmltablecell.c (draw): Removed meaningless check for a non-zero
	pixel value.

	* htmlengine.c: Added `ID_EM' to enum `ID'.
	(parse_e): New function, imported from KHTMLW.
	(html_engine_init): Install it.

	* htmlengine.c: Renamed all the `html_engine_parse_*()' functions
	to `parse_*()', made static and moved to the top of the file.
	* htmlengine.h: Removed public prototypes accordingly.

1999-11-23  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (html_engine_new_flow): Updated accordingly.
	(html_engine_insert_vspace): Updated accordingly.
	(html_engine_insert_text): Updated accordingly.
	(html_engine_parse_b): Updated accordingly.
	(html_engine_parse_i): Updated accordingly.
	(html_engine_parse_l): Updated accordingly.
	(html_engine_parse_f): Fixed allocation of `color' which caused a
	memory leak.

	* htmlclue.c (html_clue_append): Type of arg `clue' changed to
	from `HTMLObject' to `HTMLClue'.

	* htmlengine.c (html_engine_parse): Use `lucida' instead of
	`times' (temp hack).

	* htmlfont.c (create_gdk_font): Temp hack to make font handling
	behave a little more sanely.

	* htmlcluev.h: Fixed braino `HTMLClue' -> `HTMLClueClass'.

	* htmlengine.c (html_engine_insert_text): Ported all the code from
	the corresponding function in KHTMLW.
	(html_engine_parse_a): New function, ported from
	`KHTMLWidget::parseA' in KHTMLW.
	(html_engine_init): Install it.
	(close_anchor): New helper function, ported from
	`KHTMLWidget::closeAnchor()'.

	* htmlengine.h: New members `url', `target' and `baseTarget' in
	`struct _HTMLEngine'.
	* htmlengine.c (html_engine_init): Init them.
	(html_engine_destroy): Free them.

	* htmltype.h: New types `HTML_TYPE_LINKTEXT',
	`HTML_TYPE_LINKTEXTMASTER'.
	* htmltype.c (html_type_name): Updated accordingly.

	* htmllinktextmaster.c: New file, implementing the
	`HTMLLinkTextMaster' class.

	* htmlobject.c (get_url): Default implementation for the `get_url'
	virtual method.
	(get_target): Default implementation for the `get_target' virtual
	method.
	(find_anchor): Default implementation for the `find_anchor'
	virtual method.
	(html_object_class_init): Install these functions in the class
	structure.
	(html_object_get_url): New function.
	(html_object_get_target): New function.
	(html_object_find_anchor): New function.

	* htmlobject.h: New virtual methods `get_url', `get_target' and
	`find_anchor' in `HTMLObjectClass'.

	* htmlengine.h: Replaced `HTMLFontWeight weight' with `gboolean
	bold'.
	* htmlengine.c (html_engine_parse): Updated accordingly.
	(html_engine_select_font): Likewise.
	(html_engine_parse_b): Likewise.
	(html_engine_parse_h): Likewise.

	* htmllinktext.c, htmllinktext.h: New files, implementing the
	`HTMLLinkText' class.

	* htmlanchor.c, htmlanchor.h: New files, implementing
	`HTMLAnchor'.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* htmlengine.c (html_engine_parse_body): Handle empty space
	correctly.  (Added a bunch of lines from the KHTMLW original.)
	This fixes the bug reported in the previous ChangeLog entry.
	(html_tokenizer_write): Added missing increment for `t->dest' when
	a sequence that is too long is ignored.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* htmltokenizer.c (html_tokenizer_write): Changed handling of
	space according to the KHTMLW source; I am not sure why it was
	done differently.  Something is still wrong though, as `<li> <p>'
	introduces a vspace while `<li><p>' does not.

	* htmlengine.c (html_engine_parse_l): Set `vspace_inserted' to
	TRUE when parsing `li'.  Otherwise, things like
	`<li><p>text</p></li>' incorrectly insert a newline between the
	bullet and the text.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* Makefile.am (dist-hook): Removed wrong `cp' line.
	(libgtkhtml_HEADERS): Added `gtkhtml-private'.

	* Reimplemented object handling for all the object classes.  We
	still need to fix all the `destroy' handlers and generally
	double-check that things are working right.

	* htmltype.c, htmltype.h: New files implementing a very minimal
	static object system.

	* debug.c (debug_dump_object_type): Removed.
	(debug_dump_tree): Do nothing for now, while we fix the object
	system.

1999-11-11  Elliot Lee  <sopwith@redhat.com>

	* testgtkhtml.c: WWW_SOURCE, not WWW_PRESENT (so it will work with local files).
	* htmlengine.c: Use canonicalized URL for stream creation.

1999-11-09  Ettore Perazzoli  <ettore@gnu.org>

	* Makefile.am: Compile as a standalone library `libgtkhtml.la'.

1999-10-30  Michael Meeks  <mmeeks@gnu.org>

	* html-component.c (embeddable_factory): Add persist stream interface.
	Set stream item = NULL.
	(embeddable_destroy_cb): Kill stream after use.
	(embeddable_load, load_html_from_stream): vicious hack.
	(save_html): stub.
	(view_factory): Hack out view_date->html and move into embeddable_data,
	far reaching change; we need doc / view.

	* Makefile.am (gnorba_DATA): redundant ( kill ).

1999-10-30  Michael Meeks  <mmeeks@gnu.org>

	* Makefile.am (gnorba_DATA): Add gnorba install.

	* html-component.c (update_view): just do a gtk_widget_queue_draw +
	fix args. (view_update): kill.

1999-10-28  Miguel de Icaza  <miguel@gnu.org>

	* htmlpainter.c (html_painter_begin): Use the propper offset here
	when clearing the rectangle.

	* gtkhtml.c (gtk_html_vertical_scroll): Remove the spurious call
	to repaint the whole exposed region.
	(gtk_html_new): If the adjustment was not passed, create it, so
	that we can connect to the signal changed emmission before the
	layout

	* htmlpainter.c (html_painter_draw_text): Adjust the text output
	offset too.

1999-10-26  Miguel de Icaza  <miguel@gnu.org>

	* gtkhtml.c (gtk_html_vertical_scroll): Do not force a redraw anymore.
	(gtk_html_new): Now we take two adjustment arguments.
	(gtk_html_init): Do not create an artificial scrollbar nor its
	adjustments. 
	(gtk_html_calc_scrollbars): This should be no longer required;  An
	alternate mechanism should be pursued.
	(gtk_html_calc_scrollbars): Update the adjustment here.
	(gtk_html_init): Set the APP_PAINTABLE bit here.

1999-10-25  Miguel de Icaza  <miguel@gnu.org>

	* htmlengine.c (html_engine_timer_event): Use exported routines to
	access the painter.

	* htmlpainter.c (html_painter_clear, html_painter_realize,
	html_painter_being, html_painter_end): New methods to implement
	double buffering.
	
	Moved HTMLPainter structure here to make it completely opaque.

	Added preconditions everywhere.

	Made all methods aware of the painter offset, to support double
	buffering. 
	
1999-10-24  Miguel de Icaza  <miguel@gnu.org>

	* gtkhtml.c (gtk_html_unrealize): Added unrealize handler.

1999-10-24  Richard Hult  <rhult@frenzy.hemmet.chalmers.se>

	* testgtkhtml.c (main): Exit when the window is deleted.

1999-10-23  Miguel de Icaza  <miguel@gnu.org>

	* htmltextmaster.c (html_text_master_fit_line): Use
	html_object_destroy here instead of g_free directly.

	* htmlengine.c (html_engine_parse_b): Set the color using the
	proper API to insure proper color allocation management (Gdk uses
	chunks).

	* htmlsettings.c (html_settings_destroy): New method.
	(html_settings_set_bgcolor): New method.

	* htmllist.c (html_list_destroy): New method.
	(html_list_stack_clear): Implement.

	* htmlcolor.c (html_color_stack_destroy): Added destroy method.
	(html_color_stack_clear): Implemented.

	* htmlfont.c (html_font_stack_destroy): Added destroy method.

	* stringtokenizer.c (string_tokenizer_destroy): Added destroy method.

	* htmltokenizer.c (html_tokenizer_destroy): Added destroy method
	and release reosouorces.
	(html_tokenizer_reset): Free buffers here.

	* htmlengine.c (html_engine_class_init): Added destroy handler.

	* htmltokenizer.c (html_tokenizer_begin): Fixed FIXME.

	* htmlcluev.c (html_cluev_appended): Initialize this one.
	(cluev_next_aligned): Utility routine to kill warnings.

	* htmlfont.c (html_font_destroy): Add a destructor for fonts.
	(html_font_stack_clear): Added font stack destruction code.

	Added precondition entry points.
	
1999-10-17  Richard Hult  <rhult@hem2.passagen.se>

	* htmlengine.[ch]: Turn the engine into a GtkObject.

1999-10-17  Anders Carlsson  <andersca@gnu.org>

	* testgtkhtml.c: The goto button shouldn't be able to focus

1999-10-17  Richard Hult  <rhult@hem2.passagen.se>

	* html-component.c: Use a GtkHTML widget directly instead of duplicating the code here.

1999-10-17  Anders Carlsson  <andersca@gnu.org>

	* testgtkhtml.c: More work on the ui

1999-10-17  Richard Hult  <rhult@hem2.passagen.se>

	* Makefile.am: Fixed component build.
