2000-05-03  Radek Doulik  <rodo@helixcode.com>

	* link.c (button_link_cb): fixed type (link instead of
	d->html_link)

2000-05-03  Jacob Berkman  <jacob@helixcode.com>

	* Makefile.am (oaf_DATA): if using oaf, actually install oaf and not
	gnorba

2000-05-02  Michael Meeks  <michael@helixcode.com>

	* html-editor-control.oafinfo: correct supported_mime_types to stringv

2000-04-29  Maciej Stachowiak  <mjs@eazel.com>

	* html-editor-control.oafinfo: Added most standard OAF attributes
	that apply, and corrected repo_ids to include all supported
	interfaces and exclude hackish pseudo-ids.

2000-04-28  Radek Doulik  <rodo@helixcode.com>

	* editor-control-factory.c (html_button_pressed): in case we show
	popup menu, stop signal emiting

	* popup.[ch]: new file - popup menu for html widget/objects
	(popup_show): new function, shows popup menu after button press
	event

2000-04-28  Ettore Perazzoli  <ettore@helixcode.com>

	* main.c: Don't #include <libgnorba/gnorba.h> when we really don't
	need it.

2000-04-27  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: New #define `CONTROL_FACTORY_ID',
	depending on whether we are `USING_OAF' or not.
	(editor_control_factory_init): Use `CONTROL_FACTORY_ID'.

	* test-html-editor-control.c: New #define
	`HTML_EDITOR_CONTROL_ID'; conditional on whether we are
	`USING_OAF' or not.
	(container_create): Use `HTML_EDITOR_CONTROL_ID' instead of an
	hardcoded value.
	(init_corba): New function, conditionally implemented according to
	`USING_OAF'.
	(init
	(main): Use `init_corba()'.

	* main.c (init_corba): New function, different compilation
	according to the `USING_OAF' #define.
	(init_bonobo): Use `init_corba()'.

	* Makefile.am: Updated to install the OAF stuff.

	* html-editor-control.oafinfo: New file for OAF.

2000-04-28  Radek Doulik  <rodo@helixcode.com>

	* image.c (image_edit): new function to use image dialog for
	editing, it sets image parameters and dialog->image, so we could
	later change image_parameters thru new htmlimage setting functions

	* editor-control-factory.c (html_button_pressed): new handler to
	for button press event in html widget (now it calls edit dialog for
	image)
	(editor_control_factory): connect button press event handler

2000-04-27  Radek Doulik  <rodo@helixcode.com>

	* dialog.c (run_dialog): use gtk_widget_show instead of
	gnome_dialog_run

	* link.c (gtk_html_link_dialog_new): set table col spacings

	* replace.c (gtk_html_replace_dialog_new): likewise

2000-04-25  Radek Doulik  <rodo@helixcode.com>

	* image.c (gtk_html_image_dialog_new): set sensitive for OK button

	* link.c (set_entries): new function, trying to be clever about
	links :)
	(gtk_html_link_dialog_new): link dialog
	(insert_link): run link dialog

2000-04-24  Radek Doulik  <rodo@helixcode.com>

	* replace.c (replace): use RUN_DIALOG

	* search.c (search): use RUN_DIALOG

	* image.c (insert_image): use RUN_DIALOG

	* dialog.c (run_dialog): creates and runs/raises dialog

	* dialog.[ch]: new files, some general dialogs util(s)

	* editor-control-factory.c (set_frame_cb): set automatic policy
	for scrolled_window

	* Makefile.am (html_editor_control_SOURCES): added search.[ch],
	replace.[ch], image.[ch] files

	* search.c (search): new function, replacing one in gtkhtml.c
	(search_next):  new function, replacing gtk_html_search_next in gtkhtml.c

	* image.c:  new file, moved from gtkhtml/src/gtkhtml-edit-image.c
	(gtk_html_image_dialog_new): commented out halignment
	setting (left/right)
	(insert_image): new function, replacing gtk_html_insert_image

	* image.h:  new file, moved from gtkhtml/src/gtkhtml-edit-image.h

	* replace.c: new file, moved from gtkhtml/src/gtkhtml-replace.c
	(gtk_html_replace_dialog_new): replace ask dialog moved to replace
	dialog
	(replace): new function, replacing gtk_html_replace

	* replace.h: new file, moved from gtkhtml/src/gtkhtml-replace.h

	* search.c: new file, moved from gtkhtml/src/gtkhtml-search.c

	* search.h: new file, moved from gtkhtml/src/gtkhtml-search.h

	* toolbar.c (toolbar_setup): use control data

	* menubar.c (menubar_setup): use control data

	* editor-control-factory.c (editor_control_factory): use
	control_data instead of set_frame_data
	(editor_control_factory): connect to bonobo object destroy to
	destroy control_data

	* control-data.c (gtk_html_control_data_new): new ctor
	(gtk_html_control_data_destroy): new dtor

	* control-data.h: new file, contains control_data struct which
	holds out control data as html, vbox, dialogs

2000-04-21  Radek Doulik  <rodo@helixcode.com>

	* menubar.c: added menu subtree insert with items Image and Link
	plus new callbacks

2000-04-20  Radek Doulik  <rodo@helixcode.com>

	* menubar.c: use ITALIC and UNDERLINE menu items instead of 3xBOLD
	added edit_subtree_info with Cut/Copy/Paste|Search/Search
	regex/Search again/Replace
	(menubar_setup): use _list functions instead of _tree ones as we
	have more menu subtrees now :)
	(menubar_setup): once more changed :) use _list_with_data to pass
	html thru
	(undo_cb): new callback
	(redo_cb): likewise
	(cut_cb): likewise
	(copy_cb): likewise
	(paste_cb): likewise
	(search_cb): likewise
	(search_regex_cb): likewise
	(search_next_cb): likewise
	(replace_cb): likewise

	* test-html-editor-control.c (container_create): create control
	after menu is prepared

2000-03-12  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: Removed `MAKE_VBOX_CONTROL' #define as
	the bug is gone.  Apparently GtkOptionMenu likes to queue resizes
	on the parent even when not needed.  We now avoid recalculating
	the toolbars and reflowing paragraphs unless the size has actually
	changed, so the bug is gone.

2000-03-08  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c
	(MAKE_VBOX_CONTROL): New #define.  If this is not #defined, we
	just put the GtkHTML widget into a scrolled window and make it a
	control.  Otherwise, we create a vbox and put the scrolled window
	with the GtkHTML widget and the toolbar in it.  Using the vbox
	slows the whole widget down greatly, and I have no idea why.

2000-03-03  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c (editor_control_factory): Call
	`gtk_html_load_empty()' on the widget to make it an empty document
	after its created.

2000-03-01  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c (uih_hack_cb): Do not create the
	toolbar here anymore.
	(uih_hack_cb): Removed.
	(editor_control_factory): Create the toolbar here.  Put the
	toolbar and the GtkHTML widget into a vbox.  Create the menu bar
	here too.
	(set_frame_cb): Removed.

	* toolbar.c (toolbar_setup): Return a `GtkWidget *' with the
	toolbar that we want to add, fixed on top of the GtkHTML
	component.
	(create_editor_toolbar): Return the raw `GtkWidget' instead of a
	`Bonobo_Control'.

2000-02-26  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c: Implemented buttons to indent paragraphs more or
	less.  Actually make the center/left/right alignment buttons
	behave as expected.  Added cut/copy/paste toolbar buttons.

2000-02-24  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c (create_editor_toolbar): Add the paragraph style
	GtkOptionMenu before everything else.

2000-02-22  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c (insertion_font_style_changed_cb): New function.
	(create_editor_toolbar): Connect it to the
	"insertion_font_style_changed_cb" signal.

	* toolbar.c: (editor_toolbar_bold_cb): Use the new style mask
	system.
	(editor_toolbar_italic_cb): Likewise.
	(editor_toolbar_underline_cb): Likewise.
	(editor_toolbar_strikeout_cb): Likewise.

2000-02-16  Dan Winship  <danw@helixcode.com>

	* editor-control-factory.c (editor_control_factory): Update for
	latest round of interface changes.
	* test-html-editor-control.c (container_create): likewise
	* html-editor-control.gnorba: likewise

2000-02-15  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* Makefile.am: Add GNOME_EXTRA_CFLAGS to the INCLUDES.

2000-02-14  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c: Implemented the paragraph style menu.

2000-02-01  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: Set up the UI Handler.

	* test-html-editor-control.c: Updated to support the Bonobo UI
	Handler.

	* menubar.c: New file.
	* menubar.h: New file.

	* toolbar.c: New file.
	* toolbar.h: New file.

2000-01-26  Ettore Perazzoli  <ettore@helixcode.com>

	* All files: Updated according to the new Bonobo naming changes.

2000-01-25  Ettore Perazzoli  <ettore@helixcode.com>

	* test-html-editor-control.c: Added a "Save As..." menu item and its
	implementation.

	* persist-stream-impl.c (save): Implemented.

	* test-html-editor-control.c (container_create): Abort if we
	cannot get the control.

2000-01-25  Ettore Perazzoli  <ettore@helixcode.com>

	* test-html-editor-control.c: New file.

	* main.c: New file.

	* persist-stream-impl.c: New file.
	* persist-stream-impl.h: New file.

	* editor-control-factory.c: New file.
	* editor-control-factory.h: New file.
